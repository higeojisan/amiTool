#!/usr/bin/env ruby
$: << File.expand_path("#{File.dirname __FILE__}/../lib")
require 'rubygems'
require 'amiTool'
require 'optparse'

ARGV.options do |opt|
  begin
    mode = :list
    access_key = nil
    secret_key = nil
    region = 'ap-northeast-1'
    profile_name = nil
    credentials_path = nil
    instance_id = nil
    ami_name = nil
    ami_id = nil

    opt.on('-p', '--profile PROFILE_NAME')    {|v| profile_name     = v       }
    opt.on('',   '--credentials_path PATH')   {|v| credentials_path = v       }
    opt.on('-k', '--access-key ACCESS_KEY')   {|v| access_key       = v       }
    opt.on('-s', '--secret-key SECRET_KEY')   {|v| secret_key       = v       }
    opt.on('-r', '--region REGION')           {|v| region           = v       }
    opt.on('',   '--instance INSTANCE_ID')    {|v| instance_id      = v       }
    opt.on('',   '--name AMI_NAME')           {|v| ami_name         = v       }
    opt.on('',   '--ami-id AMI_ID')           {|v| ami_id           = v       }
    opt.on('-c', '--create', '# AMIの作成')    {|v| mode             = :create }
    opt.on('-d', '--delete', '# AMIの削除')    {|v| mode             = :delete }

    opt.parse!

    aws_opts = {}

    if access_key and secret_key
      aws_opts.update(
        :access_key_id => access_key,
        :secret_access_key => secret_key
      )
    elsif profile_name or credentials_path
      credentials_opts = {}
      credentials_opts[:profile_name] = profile_name if profile_name
      credentials_opts[:path] = credentials_path if credentials_path
      credentials = Aws::SharedCredentials.new(credentials_opts)
      aws_opts[:credentials] = credentials
    elsif (access_key and !secret_key) or (!access_key and secret_key)
      puts opt.help
      exit 1
    end

    aws_opts[:region] = region
    Aws.config.update(aws_opts)

    case mode
    when :list
      AmiTool::list
    when :create
      AmiTool::create("#{instance_id}", "#{ami_name}")
    when :delete
      AmiTool::delete(ami_id)
    end
  rescue => e
    $stderr.puts("[ERROR] #{e.message}")
    exit 1
  end
end
